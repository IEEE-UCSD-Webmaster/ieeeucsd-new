---
import Layout from "../../layouts/Layout.astro";
import FormatDate from "../../components/blogs/FormatDate.astro";
import { getCollection } from "astro:content";
import getReadingTime from "reading-time";
import { Icon } from 'astro-icon/components';
import getSortedPosts from "../../utils/getSortedPosts"; 

const posts = await getCollection("blogs", ({ data }) => !data.draft);
const sortedPosts = getSortedPosts(posts);

// Get unique tags from all posts
const allTags = [...new Set(sortedPosts.flatMap(post => post.data.tags))];
---

<Layout>
    <div class="flex flex-col space-y-6 items-center justify-center mx-10 lg:mx-auto text-white">
        <!-- Top Portion -->
        <div class="bg-[#141414] w-full max-w-4xl rounded-2xl px-9 py-6">
            <div class="bg-transparent font-bold text-3xl text-white">
                Blog Posts
            </div>
            <div class="bg-transparent text-md text-[#9f9f9f]">
                These are all of the blog posts that we have made. You can filter them out using the tags below.
            </div>
        </div>
        
        <!-- Tag Filtering Section -->
        <div class="bg-[#141414] w-full max-w-4xl rounded-2xl px-9 py-6">
            <div class="bg-transparent font-bold text-xl text-white mb-4">
                Filter by Tags:
            </div>
            <div class="flex flex-wrap gap-2">
                <button class="tag-filter active bg-[#4d4c4c] px-3 py-1 rounded-full" data-tag="all">All</button>
                {allTags.map((tag) => (
                    <button class="tag-filter bg-[#4d4c4c] px-3 py-1 rounded-full" data-tag={tag}>{tag}</button>
                ))}
            </div>
        </div>
        
        <!-- Bottom Portion -->
        <div class="bg-[#141414] w-full max-w-4xl rounded-2xl px-4 py-4">
            <div class="bg-transparent" id="post-container">
                {sortedPosts.map((post) => (  
                    <a href={`/blogs/${post.slug}`} class="post-item" data-tags={post.data.tags.join(',')}>
                        <ul class="bg-[#232323] transition p-5 hover:bg-[#2b2b2b] rounded-2xl text-lg mb-2">
                            <div class="bg-transparent flex flex-wrap font-bold text-2xl ">
                                {post.data.title}
                            </div>
                            <div class="bg-transparent flex flex-wrap">
                                <Icon
                                    class="bg-transparent mt-1 mr-1"
                                    name="uil:calender"
                                />
                                <div class="bg-transparent flex-wrap mt-1 text-sm">
                                    <FormatDate date={post.data.pubDate} />
                                </div>
                                <div class="bg-transparent flex-wrap mx-2">•</div>
                                <Icon
                                    class="bg-transparent mt-[0.35rem] mr-1"
                                    name="ant-design:read-outlined"
                                />
                                <div class="bg-transparent flex-wrap mt-1 text-sm">
                                    {getReadingTime(post.body).text}
                                </div>
                                <div class="bg-transparent flex-wrap mx-2">•</div>
                                <div class="bg-transparent mt-1 text-sm ">
                                Tags:
                                <span class="bg-transparent font-normal space-x-2">
                                    {post.data.tags.map((tag) => (
                                        <span class="bg-[#4d4c4c] px-2 py-1 rounded-full">
                                            {tag}
                                        </span>
                                    ))}
                                </span>
                            </div>
                            </div>
                            <div class="bg-transparent mt-1 ">
                                {post.data.description}
                            </div>
                        </ul>
                    </a>
                ))}
            </div>
        </div>
    </div>

    <style>
        .tag-filter {
            transition: all 0.3s ease;
        }
        .tag-filter.active {
            background-color: #00629b26;
            color: #ffffff;
        }
    </style>

    <script>
        let activeTags = ['all'];

        function updateActiveStyles() {
            document.querySelectorAll('.tag-filter').forEach(button => {
                if (activeTags.includes(button.dataset.tag)) {
                    button.classList.add('active');
                } else {
                    button.classList.remove('active');
                }
            });
        }

        function filterPosts() {
            const posts = document.querySelectorAll('.post-item');
            
            posts.forEach(post => {
                const postTags = post.dataset.tags.split(',');
                if (activeTags.includes('all') || activeTags.some(tag => postTags.includes(tag))) {
                    post.style.display = 'block';
                } else {
                    post.style.display = 'none';
                }
            });
        }

        document.querySelectorAll('.tag-filter').forEach(button => {
            button.addEventListener('click', (e) => {
                const clickedTag = e.target.dataset.tag;
                
                if (clickedTag === 'all') {
                    activeTags = ['all'];
                } else {
                    activeTags = activeTags.filter(tag => tag !== 'all');
                    if (activeTags.includes(clickedTag)) {
                        activeTags = activeTags.filter(tag => tag !== clickedTag);
                    } else {
                        activeTags.push(clickedTag);
                    }
                    if (activeTags.length === 0) {
                        activeTags = ['all'];
                    }
                }

                updateActiveStyles();
                filterPosts();
            });
        });

        // Initial filter
        updateActiveStyles();
        filterPosts();
    </script>
</Layout>